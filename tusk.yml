options:
  version:
    usage: The build version
    short: v
    required: true
tasks:
  setup:
    run:
      - command: cargo install cross
      - command: go get github.com/aktau/github-release
  build:macos:
    run:
      - command: cargo build --release
      - command: mkdir -p dist
      - command: cp ./target/release/boilerplato ./dist/boilerplato
      - command: cd dist && tar cfJ boilerplato-v${version}-x86_64-apple-darwin.tar.xz boilerplato && rm boilerplato && cd ..
  build:linux:
    run:
      - command: cross build --release --target x86_64-unknown-linux-gnu
      - command: mkdir -p dist
      - command: cp ./target/x86_64-unknown-linux-gnu/release/boilerplato ./dist/boilerplato
      - command: cd dist && tar cfJ boilerplato-v${version}-x86_64-unknown-linux-gnu.tar.xz boilerplato && rm boilerplato && cd ..
  build:windows:
    run:
      - command: cross build --release --target x86_64-pc-windows-gnu
      - command: mkdir -p dist
      - command: cp ./target/x86_64-pc-windows-gnu/release/boilerplato.exe ./dist/boilerplato.exe
      - command: cd dist && zip boilerplato-v${version}-x86_64-pc-windows-gnu.zip boilerplato.exe && rm boilerplato.exe && cd ..
  build:
    run:
      - command: tusk build:macos --version ${version}
      - command: tusk build:linux --version ${version}
      - command: tusk build:windows --version ${version}
  upload-artifacts:
    run:
      command: chmod +x scripts/upload-artifacts.sh && ./scripts/upload-artifacts.sh ${version}
  release:
    run:
      - command: rm -rf dist
      - command: tusk build --version ${version}
      - command: tusk upload-artifacts --version ${version}
      - command: echo "Publishing to crates.io, hit Enter to confirm." && read confirmation && cargo publish